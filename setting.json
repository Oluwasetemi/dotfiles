{
  "breadcrumbs.enabled": true,
  "better-comments.multilineComments": true,
  /**
    //--------------------------------------------------
    // ** EDITOR **
    //--------------------------------------------------
    */
  "editor.accessibilitySupport": "off",
  "editor.colorDecorators": true,
  "editor.cursorBlinking": "solid",
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.cursorStyle": "line",
  "editor.cursorWidth": 3,
  "editor.find.addExtraSpaceOnTop": false,
  "editor.fontFamily": "IBM Plex Mono, Operator Mono, Fira Code, Consolas, 'Courier New', monospace",
  "editor.fontSize": 25,
  "editor.fontWeight": "400",
  "editor.formatOnPaste": false,
  "editor.formatOnSave": false,
  "editor.formatOnType": false,
  "editor.glyphMargin": true,
  "editor.gotoLocation.multipleDefinitions": "goto",
  "editor.guides.bracketPairs": "active",
  "editor.hover.above": false,
  "editor.hover.sticky": true,
  "editor.inlineSuggest.enabled": true,
  "editor.letterSpacing": 0.6,
  "editor.lineNumbers": "interval",
  "editor.matchBrackets": "near",
  "editor.minimap.enabled": false,
  "editor.multiCursorModifier": "ctrlCmd",
  "editor.parameterHints.enabled": false,
  "editor.renderControlCharacters": false,
  "editor.rulers": [
    80,
    100,
    120
  ],
  "editor.smoothScrolling": true,
  "editor.stickyScroll.enabled": true,
  "editor.unicodeHighlight.invisibleCharacters": false,
  "editor.wordSeparators": "`~!@#%^&*()=+[{]}\\|;:'\",.<>/?",
  "editor.wordWrap": "on",
  // "editor.formatOnSave": true,
  // "editor.lineHeight": 17,
  "editor.quickSuggestions": {
    "other": "on",
    "comments": "on",
    "strings": "on"
  },
  "editor.snippetSuggestions": "top",
  // tell the ESLint plugin to run on save
  // "editor.snippetSuggestions": "top",
  "editor.fontLigatures": false,
  "editor.tabCompletion": "on",
  // The number of spaces a tab is equal to. This setting is overridden
  // based on the file contents when `editor.detectIndentation` is true.
  "editor.tabSize": 2,
  // Insert spaces when pressing Tab. This setting is overridden
  // based on the file contents when `editor.detectIndentation` is true.
  "editor.insertSpaces": true,
  // When opening a file, `editor.tabSize` and `editor.insertSpaces`
  // will be detected based on the file contents. Set to false to keep
  // the values you've explicitly set, above.
  "editor.detectIndentation": true,
  "editor.semanticHighlighting.enabled": true,
  "editor.linkedEditing": true,
  "editor.inlayHints.enabled": "on",
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.highlightActiveIndentation": true,
  // "editor.guides.bracketPairsHorizontal": "active",
  /**
  //--------------------------------------------------
  // ** EDITOR COLOR **
  //--------------------------------------------------
  */
  "editor.tokenColorCustomizations": {
    "textMateRules": []
  },
  // turn it off for JS and JSX, we will do this via eslint
  "editor.codeActionsOnSave": {
    "source.fixAll": "never",
    "source.fixAll.eslint": "explicit",
    "source.organizeImports": "never",
    "source.fixAll.tslint": "explicit",
    "source.fixAll.stylelint": "explicit"
  },
  "[javascript]": {
    "editor.formatOnSave": false,
    "editor.autoIndent": "advanced",
    "editor.showUnused": true
  },
  "[sql]": {
    "editor.formatOnSave": false,
    "editor.defaultFormatter": "ms-ossdata.vscode-postgresql"
  },
  "[python]": {
    // The number of spaces a tab is equal to. This setting is overridden
    // based on the file contents when `editor.detectIndentation` is true.
    "editor.tabSize": 4,
    // Insert spaces when pressing Tab. This setting is overridden
    // based on the file contents when `editor.detectIndentation` is true.
    "editor.insertSpaces": true,
    "editor.formatOnType": true
  },
  "[javascriptreact]": {
    "editor.formatOnSave": false,
    "editor.showUnused": true,
    "editor.wordWrap": "on",
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[typescript][javascript][javascriptreact][typescriptreact]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "typescript.tsdk": "./node_modules/typescript/lib",
  "[typescriptreact]": {},
  "errorLens.excludeBySource": [
    "cSpell",
    "Grammarly",
    "eslint"
  ],
  /**
    //--------------------------------------------------
    // ** ESLINT **
    //--------------------------------------------------
    */
  // "eslint.autoFixOnSave": true,
  // Silent the stylistic rules in you IDE, but still auto fix them
  // ESLint config: https://github.com/antfu/eslint-config
  "eslint.codeAction.showDocumentation": {
    "enable": true
  },
  "eslint.quiet": true,
  "eslint.run": "onSave",
  "eslint.rules.customizations": [
    {
      "rule": "style/*",
      "severity": "off"
    },
    {
      "rule": "format/*",
      "severity": "off"
    },
    {
      "rule": "*-indent",
      "severity": "off"
    },
    {
      "rule": "*-spacing",
      "severity": "off"
    },
    {
      "rule": "*-spaces",
      "severity": "off"
    },
    {
      "rule": "*-order",
      "severity": "off"
    },
    {
      "rule": "*-dangle",
      "severity": "off"
    },
    {
      "rule": "*-newline",
      "severity": "off"
    },
    {
      "rule": "*quotes",
      "severity": "off"
    },
    {
      "rule": "*semi",
      "severity": "off"
    }
  ],
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "vue",
    "html",
    "markdown",
    "json",
    "jsonc",
    "yaml",
    "toml"
  ],
  /**
    //--------------------------------------------------
    // ** EMMET **
    //--------------------------------------------------
    */
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "markdown": "html",
    "vue-html": "html",
    "django-html": "html",
    "markdownreact": "html",
    "mdx": "html"
  },
  "emmet.excludeLanguages": [],
  "emmet.showSuggestionsAsSnippets": true,
  "emmet.triggerExpansionOnTab": false,
  "errorLens.enabledDiagnosticLevels": [
    "warning",
    "error"
  ],
  "emmet.showExpandedAbbreviation": "always",
  /**
    //--------------------------------------------------
    // ** FILES **
    //--------------------------------------------------
    */
  "files.exclude": {
    "USE_GITIGNORE": true,
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/.next": true,
    "**/.classpath": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.factorypath": true
  },
  "files.associations": {
    "*.ejs": "html",
    "*.jsx": "javascriptreact",
    "*.tsx": "typescriptreact",
    "*.md": "markdown",
    ".lintstagedrc": "json",
    ".bash_profile": "shellscript",
    "**/requirements{/**, *}.{txt,in}": "pip-requirements",
    "*.html": "html",
    "ResponseMappingTemplate": "velocity",
    "RequestMappingTemplate": "velocity",
    "*.js": "javascript"
  },
  "files.trimTrailingWhitespace": true,
  "files.trimFinalNewlines": true,
  "files.eol": "\n",
  "files.insertFinalNewline": true,
  "files.simpleDialog.enable": true,
  /**
    //--------------------------------------------------
    // ** HTML **
    //--------------------------------------------------
    */
  "html.format.indentInnerHtml": true,
  "html.format.enable": true,
  "html.format.preserveNewLines": true,
  "html.autoClosingTags": true,
  /**
    //--------------------------------------------------
    // ** WORKBENCH **
    //--------------------------------------------------
    */
  "workbench.editor.showTabs": "multiple",
  // this lets you quickly open multiple items in a row and not have the previous ones closed on you
  "workbench.editor.enablePreviewFromQuickOpen": true,
  "workbench.editor.enablePreview": false,
  "workbench.editor.tabSizing": "shrink",
  "workbench.settings.editor": "json",
  "workbench.tips.enabled": false,
  "workbench.editor.closeOnFileDelete": true,
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editor.limit.enabled": true,
  "workbench.editor.limit.perEditorGroup": true,
  "workbench.editor.limit.value": 5,
  "workbench.sideBar.location": "right",
  "workbench.activityBar.location": "top",
  "workbench.editor.empty.hint": "hidden",
  "workbench.colorTheme": "Default Dark+",
  "workbench.tree.enableStickyScroll": true,
  "workbench.tree.stickyScrollMaxItemCount": 20,
  "workbench.editor.tabActionLocation": "left",
  "workbench.list.smoothScrolling": true,
  "workbench.tree.expandMode": "singleClick",
  "workbench.tree.indent": 10,
  "workbench.startupEditor": "none",
  "workbench.editor.restoreViewState": false,
  "workbench.externalBrowser": "chrome",
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook",
    "*.mp4": "default",
    "git-rebase-todo": "default"
  },
  /**
    //--------------------------------------------------
    // ** WORKBENCH COLOR **
    //--------------------------------------------------
    */
  "workbench.colorCustomizations": {
    "terminal.foreground": "#FAD000",
    "editorLineNumber.foreground": "#FAD000",
    "editorLineNumber.activeForeground": "#7700ff",
    "menu.separatorBackground": "#c25a63",
    "inputValidation.infoForeground": "#00ff00",
    "inputValidation.warningForeground": "#ffd500",
    "inputValidation.errorForeground": "#ff0000",
    "editorCursor.foreground": "#ff0000",
    "editor.snippetTabstopHighlightBackground": "#369",
    "editor.snippetTabstopHighlightBorder": "#583399",
    "editor.snippetFinalTabstopHighlightBackground": "#3d9933",
    "editor.snippetFinalTabstopHighlightBorder": "#5c12db"
    // "activityBar.inactiveForeground": "#000",
    // "tab.inactiveBackground": "#f7d958",
    // "tab.inactiveForeground": "#d64b0a"
  },
  /**
    //--------------------------------------------------
    // ** WINDOW **
    //--------------------------------------------------
    */
  "window.newWindowDimensions": "inherit",
  "window.titleBarStyle": "custom",
  "window.zoomLevel": 0,
  "window.autoDetectColorScheme": true,
  /**
    //--------------------------------------------------
    // ** PRETTIER **
    //--------------------------------------------------
    */
  "prettier.enable": false,
  "prettier.printWidth": 200,
  "prettier.semi": false,
  "prettier.singleQuote": true,
  "prettier.trailingComma": "all",
  // "prettier.arrowParens": "avoid",
  // "prettier.bracketSpacing": true,
  // "prettier.bracketSpacing": true,
  // "prettier.eslint": true,
  // "prettier.jsxBracketSameLine": false,
  // "prettier.proseWrap": "always",
  // "prettier.semi": true,
  // "prettier.singleQuote": true,
  // "prettier.tabWidth": 2,
  // "prettier.trailingComma": "all",
  // "prettier.useTabs": true,
  // Optional BUT IMPORTANT: If you have the prettier extension enabled for other languages like CSS and HTML, turn it off for JS since we are doing it through Eslint already
  // show snippets before any other auto completion
  /**
    //--------------------------------------------------
    // ** EXPLORER **
    //--------------------------------------------------
    */
  "explorer.openEditors.visible": 1,
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  /**
    //--------------------------------------------------
    // ** CSS **
    //--------------------------------------------------
    */
  "css.lint.zeroUnits": "ignore",
  "css.format.enable": true,
  "css.format.newlineBetweenRules": true,
  "css.format.newlineBetweenSelectors": true,
  "css.format.spaceAroundSelectorSeparator": true,
  /**
    //--------------------------------------------------
    // ** JAVASCRIPT **
    //--------------------------------------------------
    */
  "javascript.updateImportsOnFileMove.enabled": "always",
  "javascript.suggest.autoImports": true,
  "javascript.validate.enable": false,
  "javascript.preferences.quoteStyle": "auto",
  "javascript.autoClosingTags": true,
  "javascript.preferences.renameMatchingJsxTags": true,
  /**
    //--------------------------------------------------
    // ** TERMINAL **
    //--------------------------------------------------
    */
  "terminal.integrated.fontFamily": "'Operator Mono', 'Fira Code', monaco, 'Anonymous Pro', monoid,'Envy Code R', monospace",
  "terminal.integrated.fontSize": 15,
  "terminal.integrated.lineHeight": 1.2,
  "terminal.integrated.fontWeightBold": "100",
  "terminal.integrated.letterSpacing": 0.5,
  "terminal.integrated.fontWeight": "100",
  "terminal.integrated.showExitAlert": false,
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.cursorStyle": "line",
  "terminal.integrated.enableVisualBell": true,
  "terminal.integrated.profiles.osx": {
    "path": null,
    "args": null
  },
  "terminal.integrated.automationProfile.osx": {
    "path": "zsh -l",
    "icon": "tools"
  },
  "terminal.integrated.stickyScroll.enabled": true,
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.env.windows": {},
  "terminal.integrated.defaultProfile.windows": "Git Bash",
  "terminal.integrated.autoReplies": {
    "dotenv: found '.env' file. Source it? ([Y]es/[n]o/[a]lways/n[e]ver)": "e\r"
  },
  "terminal.integrated.persistentSessionReviveProcess": "never",
  "terminal.integrated.tabs.enabled": true,
  "terminal.integrated.suggest.enabled": true,
  "terminal.integrated.env.osx": {},
  /**
    //--------------------------------------------------
    // ** MARKDOWN **
    //--------------------------------------------------
    */
  "markdown.preview.fontFamily": " 'Ubuntu', 'Segoe WPC', 'Segoe UI', 'HelveticaNeue-Light' , 'Droid Sans', sans-serif",
  "markdown.preview.fontSize": 12,
  "[markdown]": {
    "editor.codeLens": true,
    "editor.wordWrap": "on",
    // changed 1.41 release
    // "editor.autoIndent": "advanced",
    "editor.fontLigatures": true,
    "editor.quickSuggestions": {
      "comments": "on",
      "strings": "on",
      "other": "on"
    },
    "editor.emptySelectionClipboard": false,
    // "editor.defaultFormatter": "yzhang.markdown-all-in-one",
    "editor.formatOnSave": false,
    "files.trimTrailingWhitespace": false,
  },
  "markdownlint.config": {
    "no-empty-links": false,
    "code": true,
    "fenced-code-language": true,
    "language": true,
    "no-duplicate-header": true,
    "atx": true
  },
  /**
    //--------------------------------------------------
    // ** DEBUG **
    //--------------------------------------------------
    */
  "debug.console.fontFamily": "'Fira Code', monaco, 'Anonymous Pro', monoid,'Envy Code R', monospace",
  "debug.openDebug": "openOnSessionStart",
  "debug.openExplorerOnEnd": false,
  "debug.showInStatusBar": "always",
  "debug.toolBarLocation": "floating",
  /**
    //--------------------------------------------------
    // ** EXTENSIONS **
    //--------------------------------------------------
    */
  "togglequotes.chars": [
    "\"",
    "'",
    "`"
  ],
  "auto-rename-tag.activationOnLanguage": [
    "html",
    "xml",
    "javascript",
    // "typescript",
    "javascriptreact",
    "typescriptreact"
  ],
  "auto-close-tag.activationOnLanguage": [
    "xml",
    "php",
    "blade",
    "ejs",
    "jinja",
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "plaintext",
    "markdown",
    "vue",
    "liquid",
    "erb",
    "lang-cfml",
    "cfml",
    "HTML (Eex)"
  ],
  "auto-close-tag.enableAutoCloseSelfClosingTag": true,
  "auto-close-tag.enableAutoCloseTag": true,
  "gitlens.keymap": "alternate",
  "gitlens.advanced.messages": {
    "suppressFileNotUnderSourceControlWarning": true
  },
  // "sync.gist": "40ba9fae99386ab07a9427b9f6e0c847",
  // "local-history.absolute": true,
  // "local-history.path": "./.vscode-history",
  "grunt.autoDetect": "off",
  /**
    //--------------------------------------------------
    // ** NPM **
    //--------------------------------------------------
    */
  "npm.runSilent": true,
  "gulp.autoDetect": "off",
  "github.copilot.enable": {
    "*": true,
    "markdown": true,
    "plaintext": false
  },
  "search.exclude": {
    "**/node_modules": true,
    "**/bower_components": true,
    "**/coverage": true,
    "**/dist": true,
    "**/build": true,
    "**/.build": true,
    "**/.gh-pages": true,
    "**/*.snap": true,
    "**/*.svg": true,
    "**/.git": true,
    "**/.github": false,
    "**/.nuxt": true,
    "**/.output": true,
    "**/.pnpm": true,
    "**/.vscode": true,
    "**/.yarn": true,
    "**/assets": true,
    "**/dist/**": true,
    "**/logs": true,
    "**/out/**": true,
    "**/package-lock.json": true,
    "**/pnpm-lock.yaml": true,
    "**/public": true,
    "**/temp": true,
    "**/yarn.lock": true,
    "**/CHANGELOG*": true,
    "**/LICENSE*": true,
  },
  "cSpell.userWords": [
    "afterall",
    "ALLTEAMPROVIDER",
    "architectured",
    "autofetch",
    "autopopulate",
    "backticks",
    "blowitallaway",
    "CHOOSELIFE",
    "classpath",
    "clickoutside",
    "Cloudinary",
    "clsx",
    "Consolas",
    "Contentful",
    "Criterias",
    "currentuser",
    "Datatypes",
    "datetime",
    "dbname",
    "destructure",
    "destructured",
    "devtool",
    "dompurify",
    "Dont",
    "editoutfit",
    "endadornment",
    "Equilibra",
    "esbenp",
    "espanso",
    "factorypath",
    "Financials",
    "fira",
    "firstname",
    "Fluna",
    "formik",
    "Freecodecamp",
    "frontmatter",
    "generaters",
    "ghpages",
    "graphiql",
    "graphql",
    "gravatar",
    "hacky",
    "iban",
    "inprogress",
    "insession",
    "ipynb",
    "kentcdodds",
    "keymap",
    "keystonejs",
    "Kubernetes",
    "lastname",
    "Leaderboard",
    "linebreak",
    "lintstagedrc",
    "Listify",
    "loanapplication",
    "localstorage",
    "loglevel",
    "lways",
    "mailinator",
    "mailtrap",
    "markdownreact",
    "maxlength",
    "medicon",
    "microservice",
    "middlewares",
    "mimetype",
    "minlength",
    "minmax",
    "Mixins",
    "Monoid",
    "mouseup",
    "mydate",
    "natterbase",
    "Neue",
    "noactivity",
    "nonoctal",
    "noreferrer",
    "Oluwasetemi",
    "Oluwasetemi's",
    "Onlending",
    "openpyxl",
    "organisation",
    "originalname",
    "Osogbo",
    "ossdata",
    "Parens",
    "paystack",
    "PERMISSIONUPDATE",
    "personalised",
    "pgsql",
    "precommit",
    "prepending",
    "prestart",
    "promisification",
    "promisify",
    "pubsub",
    "purgecss",
    "pyenv",
    "quokka",
    "refetch",
    "reponame",
    "rerender",
    "Segoe",
    "Setemi",
    "SIGNIN",
    "Signout",
    "signup",
    "singleproject",
    "Spotify",
    "stacktraces",
    "stylelint",
    "subcomponent",
    "submodule",
    "Submodules",
    "SUPERADMIN",
    "tabindex",
    "tailwindcss",
    "telebot",
    "testid",
    "timekit",
    "Toastify",
    "todohighlight",
    "togglequotes",
    "totalearned",
    "userid",
    "uuidv",
    "Validators",
    "vendorsdb",
    "virtuals",
    "vite",
    "vitejs",
    "vitest",
    "whatsapp",
    "Workcation",
    "yzhang"
  ],
  "cSpell.allowCompoundWords": true,
  "cSpell.language": "en,en-US",
  "css.lint.hexColorLength": "ignore",
  "[json]": {
    "editor.quickSuggestions": {
      "strings": true,
      "comments": true
    },
  },
  "files.autoSaveDelay": 5000,
  "peacock.affectActivityBar": true,
  "peacock.affectStatusBar": true,
  "peacock.favoriteColors": [
    {
      "name": "Angular Red",
      "value": "#b52e31"
    },
    {
      "name": "Auth0 Orange",
      "value": "#eb5424"
    },
    {
      "name": "Azure Blue",
      "value": "#007fff"
    },
    {
      "name": "C# Purple",
      "value": "#68217A"
    },
    {
      "name": "Gatsby Purple",
      "value": "#639"
    },
    {
      "name": "Go Cyan",
      "value": "#5dc9e2"
    },
    {
      "name": "Java Blue-Gray",
      "value": "#557c9b"
    },
    {
      "name": "JavaScript Yellow",
      "value": "#f9e64f"
    },
    {
      "name": "Mandalorian Blue",
      "value": "#1857a4"
    },
    {
      "name": "Node Green",
      "value": "#215732"
    },
    {
      "name": "React Blue",
      "value": "#00b3e6"
    },
    {
      "name": "Something Different",
      "value": "#832561"
    },
    {
      "name": "Vue Green",
      "value": "#42b883"
    }
  ],
  // SOP's highlight matching tag setting.
  "highlight-matching-tag.styles": {
    "opening": {
      "full": {
        "custom": {
          "backgroundColor": "rgba(165, 153, 233, 0.1)"
        },
        "underline": "#ffc600"
      },
      "left": {
        "custom": {
          "borderWidth": "1"
        },
        "underline": "#ffc600"
      },
      "right": {
        "custom": {
          "borderWidth": "1"
        },
        "underline": "#ffc600"
      }
    }
  },
  "[vue]": {
    "editor.defaultFormatter": "Vue.volar"
  },
  "[css][scss][less]": {
    "editor.defaultFormatter": "vscode.css-language-features"
  },
  "[json][jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  // "workbench.iconTheme": "material-icon-theme",
  /*LiveServer settings*/
  "liveServer.settings.host": "localhost",
  "liveServer.settings.CustomBrowser": "microsoft-edge",
  "liveServer.settings.NoBrowser": true,
  "liveServer.settings.port": 9999,
  "liveServer.settings.donotShowInfoMsg": true,
  /**
  //--------------------------------------------------
  // ** TODO HIGHLIGHT **
  //--------------------------------------------------
  */
  "better-comments.tags": [
    {
      "tag": "!",
      "color": "#FF2D00",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "?",
      "color": "#3498DB",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "//",
      "color": "#474747",
      "strikethrough": true,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "todo",
      "color": "#FF8C00",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "*",
      "color": "#98C379",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    }
  ],
  "todohighlight.isEnable": true,
  "todohighlight.isCaseSensitive": true,
  "todohighlight.keywords": [
    "DEBUG:",
    "REVIEW:",
    {
      "text": "NOTE:",
      "color": "#ff0000",
      "backgroundColor": "yellow",
      "overviewRulerColor": "grey"
    },
    {
      "text": "HACK:",
      "color": "#000",
      "isWholeLine": false
    },
    {
      "text": "TODO:",
      "color": "red",
      "border": "1px solid red",
      "borderRadius": "2px", //NOTE: using borderRadius along with `border` or you will see nothing change
      "backgroundColor": "rgba(0,0,0,.2)"
      //other styling properties goes here ...
    }
  ],
  // "todohighlight.keywordsPattern": "TODO:|FIXME:|\\(([^)]+)\\)", //highlight `TODO:`,`FIXME:` or content between parentheses
  // "todohighlight.defaultStyle": {
  // 	"color": "red",
  // 	"backgroundColor": "#ffab00",
  // 	"overviewRulerColor": "#ffab00",
  // 	"cursor": "pointer",
  // 	"border": "1px solid #eee",
  // 	"borderRadius": "2px",
  // 	"isWholeLine": true
  //other styling properties goes here ...
  // },
  "todohighlight.include": [
    "**/*.js",
    "**/*.jsx",
    "**/*.ts",
    "**/*.tsx",
    "**/*.html",
    "**/*.php",
    "**/*.css",
    "**/*.scss"
  ],
  "todohighlight.exclude": [
    "**/node_modules/**",
    "**/bower_components/**",
    "**/dist/**",
    "**/build/**",
    "**/.vscode/**",
    "**/.github/**",
    "**/_output/**",
    "**/*.min.*",
    "**/*.map",
    "**/.next/**"
  ],
  "todohighlight.maxFilesForSearch": 5120,
  "todohighlight.toggleURI": false,
  "gitlens.gitCommands.closeOnFocusOut": true,
  /**
  //--------------------------------------------------
  // ** RUBY **
  //--------------------------------------------------
  */
  "ruby.useBundler": false, //run non-lint commands with bundle exec
  "ruby.useLanguageServer": true, // use the internal language server (see below)
  "ruby.lint": {
    "rubocop": {
      "useBundler": false // enable rubocop via bundler
    },
    "reek": {
      "useBundler": true // enable reek via bundler
    }
  },
  "ruby.format": "rubocop", // use rubocop for formatting
  "[ruby]": {
    "editor.tabSize": 2
  },
  "[php]": {
    "editor.tabSize": 4
  },
  "python.languageServer": "Default",
  "[django-html]": {
    "editor.formatOnSave": true
    // "editor.defaultFormatter": "HookyQR.beautify"
  },
  "hediet.vscode-drawio.local-storage": "eyIuZHJhd2lvLWNvbmZpZyI6IntcImxhbmd1YWdlXCI6XCJcIixcImN1c3RvbUZvbnRzXCI6W10sXCJsaWJyYXJpZXNcIjpcImdlbmVyYWxcIixcImN1c3RvbUxpYnJhcmllc1wiOltcIkwuc2NyYXRjaHBhZFwiXSxcInBsdWdpbnNcIjpbXSxcInJlY2VudENvbG9yc1wiOltdLFwiZm9ybWF0V2lkdGhcIjowLFwiY3JlYXRlVGFyZ2V0XCI6ZmFsc2UsXCJwYWdlRm9ybWF0XCI6e1wieFwiOjAsXCJ5XCI6MCxcIndpZHRoXCI6ODI3LFwiaGVpZ2h0XCI6MTE2OX0sXCJzZWFyY2hcIjp0cnVlLFwic2hvd1N0YXJ0U2NyZWVuXCI6dHJ1ZSxcImdyaWRDb2xvclwiOlwiI2QwZDBkMFwiLFwiZGFya0dyaWRDb2xvclwiOlwiIzZlNmU2ZVwiLFwiYXV0b3NhdmVcIjp0cnVlLFwicmVzaXplSW1hZ2VzXCI6bnVsbCxcIm9wZW5Db3VudGVyXCI6MCxcInZlcnNpb25cIjoxOCxcInVuaXRcIjoxLFwiaXNSdWxlck9uXCI6ZmFsc2UsXCJ1aVwiOlwiXCJ9In0=",
  // Very important: Install this plugin: https://github.com/be5invis/vscode-custom-css
  // You'll need to change this to a file URI scheme on your computer: https://en.wikipedia.org/wiki/File_URI_scheme
  // Mac/Linux: file:///Users/YOUR-PC-USERNAME/.vscodestyles.css
  // Windows: file:///C:/Users/YOUR-PC-USERNAME/.vscodestyles.css
  // "vscode_custom_css.imports": ["file:///Users/oluwasetemi/.vscodestyles.css"],
  "liveServer.settings.donotVerifyTags": true,
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "pgsql.connections": [
    {
      "host": "localhost",
      "dbname": "prisma-starter",
      "user": "oluwasetemi",
      "password": "",
      "emptyPasswordInput": true,
      "port": "5432",
      "profileName": "prisma"
    },
    {
      "host": "localhost",
      "dbname": "vendorsdb",
      "user": "oluwasetemi",
      "password": "",
      "emptyPasswordInput": false,
      "port": "5432",
      "profileName": "local-fluna",
      "connectTimeout": 15,
      "encrypt": false,
      "applicationName": "vscode-pgsql",
      "hostaddr": "",
      "options": "",
      "sslmode": "prefer",
      "clientEncoding": "",
      "sslcompression": true,
      "sslcert": "",
      "sslkey": "",
      "sslrootcert": "",
      "sslcrl": "",
      "requirepeer": ""
    },
    {
      "host": "localhost",
      "dbname": "postgres",
      "user": "oluwasetemi",
      "password": "",
      "emptyPasswordInput": true,
      "port": "5432",
      "profileName": "default"
    },
    {
      "host": "paymenthub-db-cluster-dev.cp8kao8oeujs.eu-west-2.rds.amazonaws.com",
      "dbname": "paymenthubdatabasedev",
      "user": "paymenthub",
      "password": "",
      "emptyPasswordInput": false,
      "port": "5432",
      "profileName": "hamonize"
    },
    {
      "host": "fluna-atlas-clusernew-dev.cluster-cp8kao8oeujs.eu-west-2.rds.amazonaws.com",
      "user": "flunaAtlasDBUsername",
      "dbname": "flunaAtlasdev",
      "password": "",
      "emptyPasswordInput": false,
      "port": "5432",
      "profileName": "atlas",
      "connectTimeout": 15,
      "encrypt": false,
      "applicationName": "vscode-pgsql",
      "hostaddr": "",
      "options": "",
      "sslmode": "prefer",
      "clientEncoding": "",
      "sslcompression": true,
      "sslcert": "",
      "sslkey": "",
      "sslrootcert": "",
      "sslcrl": "",
      "requirepeer": ""
    }
  ],
  "go.toolsManagement.autoUpdate": true,
  "security.workspace.trust.untrustedFiles": "open",
  "redhat.telemetry.enabled": true,
  "python.defaultInterpreterPath": "C:\\Users\\Oluwasetemi ojo\\AppData\\Local\\Programs\\Python\\Python311\\python.exe",
  "python.analysis.completeFunctionParens": true,
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "quokka.showCodeLensInOutputChannel": true,
  "json.schemas": [],
  "yaml.customTags": [
    "!And",
    "!And sequence",
    "!If",
    "!If sequence",
    "!Not",
    "!Not sequence",
    "!Equals",
    "!Equals sequence",
    "!Or",
    "!Or sequence",
    "!FindInMap",
    "!FindInMap sequence",
    "!Base64",
    "!Join",
    "!Join sequence",
    "!Cidr",
    "!Ref",
    "!Sub",
    "!Sub sequence",
    "!GetAtt",
    "!GetAZs",
    "!ImportValue",
    "!ImportValue sequence",
    "!Select",
    "!Select sequence",
    "!Split",
    "!Split sequence",
    "!Condition",
    "!Transform sequence"
  ],
  // Enable/disable default YAML formatter (requires restart)
  "yaml.format.enable": true,
  "editor.guides.indentation": true,
  "json.maxItemsComputed": 15000,
  "editor.foldingMaximumRegions": 15000,
  "editor.suggest.showMethods": true,
  "editor.suggest.preview": true,
  "editor.acceptSuggestionOnEnter": "on",
  "yaml.validate": false,
  "gitlens.gitCommands.skipConfirmations": [
    "fetch:command",
    "stash-push:command",
    "switch:command",
    "push:command"
  ],
  "totalTypeScript.hideAllTips": false,
  "totalTypeScript.hideBasicTips": false,
  "totalTypeScript.hiddenTips": [
    "basic-types",
    "array-type",
    "any-type",
    "typing-function-parameters",
    "function-return-type",
    "optional-object-property"
  ],
  "githubPullRequests.pullBranch": "never",
  "git.ignoreMissingGitWarning": true,
  "git.ignoreRebaseWarning": true,
  "git.confirmSync": false,
  "git.autofetch": true,
  "git.enableSmartCommit": true,
  "git.untrackedChanges": "separate",
  "git.openRepositoryInParentFolders": "never",
  /**
    //--------------------------------------------------
    // ** TYPESCRIPT **
    //--------------------------------------------------
    */
  "typescript.autoClosingTags": true,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.preferences.renameMatchingJsxTags": true,
  "cmake.configureOnOpen": true,
  "[graphql]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "diffEditor.hideUnchangedRegions.enabled": false,
  "diffEditor.maxComputationTime": 0,
  "diffEditor.ignoreTrimWhitespace": true,
  "diffEditor.renderSideBySide": true,
  "debug.onTaskErrors": "debugAnyway",
  "svg.preview.mode": "svg",
  "wallaby.startAutomatically": false,
  "wallaby.node": "/Users/oluwasetemi/.nvm/versions/node/v20.15.1/bin/node",
  // "wallaby.node": "C:/\\Program Files\\nodejs\\node.exe",
  // "deno.path": "/usr/local/bin/deno",
  // "deno.path": "C:\\Users\\Oluwasetemi ojo\\.deno\\bin\\deno",
  // "deno.enable": true,
  "deno.enablePaths": [
    ".", // This is the default
    "./worker"
  ],
  "editor.stickyScroll.maxLineCount": 10,
  "accessibility.signals.terminalBell": {
    "sound": "on"
  },
  "vue.server.hybridMode": false,
  "prisma.showPrismaDataPlatformNotification": false,
  "github.copilot.editor.enableAutoCompletions": true,
  "tailwind-fold.autoFold": false,
  "files.restoreUndoStack": false,
  "peacock.surpriseMeOnStartup": false,
  "extensions.experimental.deferredStartupFinishedActivation": true,
  "jest.runMode": "on-demand",
  "jest.monitorLongRun": 100000,
  "vite.autoStart": false,
  "cloak.environmentKeys": "string.quoted.single.env,numeric.env,string.quoted.double.env",
  "cloak.environmentComments": "comment.line.number-sign.ini",
  "[mdx]": {
    "editor.defaultFormatter": "unifiedjs.vscode-mdx"
  },
  "playwright.reuseBrowser": true,
  "open-in-browser.default": "chrome",
  "errorLens.searchForProblemQuery": "https://google.com/?q=$message",
  "quokka.codeAutoPlayDelay": 10000,
  "highlight-matching-tag.highlightSelfClosing": true,
  "github.copilot.preferredAccount": "Oluwasetemi",
  // updated 2024-07-16 09:53
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".project": ".classpath",
    "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",
    "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",
    "ansible.cfg": "ansible.cfg, .ansible-lint, requirements.yml",
    "app.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, server.php, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "Cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json, CMakeCache.txt",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "default.nix": "shell.nix",
    "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
    "Dockerfile": "*.dockerfile, .devcontainer.*, .dockerignore, captain-definition, compose.*, docker-compose.*, dockerfile*",
    "flake.nix": "flake.lock",
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "gemfile": ".ruby-version, gemfile.lock",
    "go.mod": ".air*, go.sum",
    "go.work": "go.work.sum",
    "hatch.toml": ".editorconfig, .flake8, .isort.cfg, .python-version, hatch.toml, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "I*.cs": "$(capture).cs",
    "Makefile": "*.mk",
    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, next-i18next.config.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .nuxtignore, .nuxtrc, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "package.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json*, bower.json, build.config.*, bun.lockb, bunfig.toml, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, wrangler.toml, xo.config.*, yarn*, .graphqlconfig*, craco.config.*, cypress.*, i18next-parser*, .babelrc",
    "i18n.*": "i18nForTests.*",
    "jest.config.*": "jest.polyfills.*",
    "setupTests.*": "setupTests.*, setupChart.*",
    "_headers": "_headers, _redirects",
    "Pipfile": ".editorconfig, .flake8, .isort.cfg, .python-version, Pipfile, Pipfile.lock, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
    "pyproject.toml": ".commitlint*, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .flake8, .flowconfig, .isort.cfg, .jslint*, .lintstagedrc*, .markdownlint*, .pdm-python, .pdm.toml, .prettier*, .pylintrc, .python-version, .ruff.toml, .stylelint*, .textlint*, .xo-config*, .yamllint*, MANIFEST.in, Pipfile, Pipfile.lock, biome.json*, commitlint*, dangerfile*, dlint.json, dprint.json*, eslint*, hatch.toml, lint-staged*, pdm.lock, phpcs.xml, poetry.lock, poetry.toml, prettier*, pyproject.toml, pyrightconfig.json, requirements*.in, requirements*.pip, requirements*.txt, ruff.toml, setup.cfg, setup.py, stylelint*, tox.ini, tslint*, xo.config.*",
    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README_*, RELEASE_NOTES*, Readme_*, Release_Notes*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme_*, release_notes*, security.md, sponsors*",
    "Readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README_*, RELEASE_NOTES*, Readme_*, Release_Notes*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme_*, release_notes*, security.md, sponsors*",
    "README*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README_*, RELEASE_NOTES*, Readme_*, Release_Notes*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme_*, release_notes*, security.md, sponsors*",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "requirements.txt": ".editorconfig, .flake8, .isort.cfg, .python-version, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "rush.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json*, bower.json, build.config.*, bun.lockb, bunfig.toml, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, wrangler.toml, xo.config.*, yarn*",
    "setup.cfg": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, tox.ini",
    "setup.py": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, setup.py, tox.ini",
    "shims.d.ts": "*.d.ts",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",
    "*.axaml": "$(capture).axaml.cs",
    "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
    "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.cs": "$(capture).*.cs",
    "*.cshtml": "$(capture).cshtml.cs",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
    "*.db": "*.db-shm, *.db-wal",
    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "*.fs": "$(capture).fs.js, $(capture).fs.js.map, $(capture).fs.jsx, $(capture).fs.ts, $(capture).fs.tsx, $(capture).fs.rs, $(capture).fs.php, $(capture).fs.dart",
    "*.go": "$(capture)_test.go",
    "*.java": "$(capture).class",
    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx, $(capture).less, $(capture).module.less, $(capture).module.less.d.ts,  $(capture).scss, $(capture).module.scss, $(capture).module.scss.d.ts, $(capture).module.css",
    "*.master": "$(capture).*.cs, $(capture).*.vb",
    "*.md": "$(capture).*",
    "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
    "*.mts": "$(capture).mts.map, $(capture).*.mts, $(capture)_*.mts",
    "*.pubxml": "$(capture).pubxml.user",
    "*.py": "$(capture).pyi",
    "*.razor": "$(capture).razor.cs, $(capture).razor.css, $(capture).razor.scss",
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
    "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx, $(capture).less, $(capture).module.less, $(capture).module.less.d.ts, $(capture).scss, $(capture).module.scss, $(capture).module.scss.d.ts, $(capture).css.ts, $(capture).module.css, $(capture).module.css.d.ts",
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
    "*.w": "$(capture).*.w, I$(capture).w",
    "*.xaml": "$(capture).xaml.cs"
  },
  "arrayIndexInlay.enabled": true
}
